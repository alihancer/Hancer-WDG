<rrx>
  <!-- === .NET Action Definition and Help === -->
  <!-- Licensed Materials - Property of IBM
// 15/02/2021   Muhammet Ali Hancer- IBM - WDG (IBM RPA Offering) Integration Library
 5725-C15
 © Copyright IBM Corp. 1994, 2019 All Rights Reserved
 US Government Users Restricted Rights - Use, duplication or
 disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
 -->

<!-- format: <net ref="C#Namespace.Class"> -->
  <net ref="WDGIntegration.WDGScripts">  
  <!-- Actions and Properties defined here are displayed in alphabetical order in DStudio -->
  <!-- An example custom action that takes multiple parameters. -->  
  <!-- This definition must match the c# menthod -->
  <h>
    DEveloped by Muhammet Ali Hancer as prototype of Datacap Action Library calling WDG Bot.
    Publish Date: 15/02/2021
    Note that this is just for prototype and testing purposes. Should be used carefully for production purposes.<br/>
    Get and Post methods of WDG RPA Rest Service is implemented for sample purposes.
  </h>
	  

	  <method name="runWDGBot_GET">
	  <p name="hostURL" type="string" qi="String such as: https://ibmbaw:8099/  Smart parameters are supported."/>
	  <p name="relativePath" type="string" qi="String such as: scripts/  Smart parameters are supported."/>
	  <p name="WDGBotName" type="string" qi="This is name of WDGBot such as: HancerWDGBot.  Smart parameters are supported."/>
	  <p name="unLockMachine" type="bool" qi="This is for unLockMachine."/>
	  <p name="WDGQuerystring" type="string" qi="This is like a querystring look at the example below.  Smart parameters are supported."/>
	  <ap>
		  This action will integrate with WDG and run a Bot with the given details by using the POST Method.
		  WDGInputParameters should be similiar to the below format:<br/><br/>
		  <b>Key1=Value1|Key2=Value2|Key3=Value3</b>

		  Also the other parameters are:
		  hostURL should contain the / at the end such as: https://ibmbaw:8099/
		  relativePath should contain the / at the end such as: scripts/

		  The name of the parameter here is not re<br/><br/>

		  If the action needs to support smart parameters, then the type needs to be string
		  even if the parameter expected is ultimately a integer, bool, etc.  The C# code will
		  have to convert the type after resolving the smart parameter.<br/>
	  </ap>
	  <h>
		  Put your action description here.<br/><br/>

		  More description here.
		  <e>
			  <b>MyAction("123")</b><br/>
			  This is the action example.
		  </e>
	  </h>
	  <lvl>All levels.</lvl>
	  <ret>
		  <b>True,</b> if the action succeeds.  Otherwise, <b>False.</b>
	  </ret>
	  <see>
		  Refer the user to other related actions and documentation.
	  </see>
  </method>

	  <method name="runWDGBot_POST">
		  <p name="hostURL" type="string" qi="String such as: https://ibmbaw:8099/  Smart parameters are supported."/>
		  <p name="relativePath" type="string" qi="String such as: scripts/  Smart parameters are supported."/>
		  <p name="WDGBotName" type="string" qi="This is name of WDGBot such as: HancerWDGBot.  Smart parameters are supported."/>
		  <p name="unLockMachine" type="bool" qi="This is for unLockMachine."/>
		  <p name="WDGinputParameters" type="string" qi="This is like a querystring look at the example below.  Smart parameters are supported."/>
		  <ap>
			  This action will integrate with WDG and run a Bot with the given details by using the POST Method.
			  WDGInputParameters should be similiar to the below format:<br/><br/>
			  <b>Key1=Value1|Key2=Value2|Key3=Value3</b>

			  Also the other parameters are:
			  hostURL should contain the / at the end such as: https://ibmbaw:8099/
			  relativePath should contain the / at the end such as: scripts/

			  The name of the parameter here is not re<br/><br/>

			  If the action needs to support smart parameters, then the type needs to be string
			  even if the parameter expected is ultimately a integer, bool, etc.  The C# code will
			  have to convert the type after resolving the smart parameter.<br/>
		  </ap>
		  <h>
				<e>
					Here is an action example.The below example calls the bot named "HancerRPA" and sending the export.txt file name which is produced dynamically with the created export.txt filename under export folder of the Datacap app.
					<b>runWDGBot_POST("@STRING(https://ibmbaw:8099/)","@STRING(scripts/)","HancerRPA","False","InputText=+@STRING(C:\\Datacap\\PolicyApp\\Export\\)+@B.ID+@STRING(.txt)")</b><br/>
					In Datacap Studio: the belows are examples of how each parameter can be set to create the above action<br/>
					string hostURL=@STRING(https://ibmbaw:8099/)<br/>
					string relativePath= @STRING(scripts/)<br/>
					string wdgBotName=HancerRPA<br/>
					boolean unLockMachine=False<br/>
					string WDGinputParameters=InputText=+@STRING(C:\\Datacap\\PolicyAppDev\\Export\\)+@B.ID+@STRING(.txt)<br/>
				</e>
		  </h>
		  <lvl>All levels.</lvl>
		  <ret>
			  <b>True,</b> if the action succeeds.  Otherwise, <b>False.</b>
		  </ret>
		  <see>
			  Refer the user to other related actions and documentation.
		  </see>
	  </method>
	  

  </net>
</rrx>
